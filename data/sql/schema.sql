CREATE TABLE infrastructure_version (id BIGINT, short VARCHAR(100) NOT NULL, description text NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, version BIGINT, PRIMARY KEY(id, version)) ENGINE = INNODB;
CREATE TABLE infrastructure (id BIGINT AUTO_INCREMENT, short VARCHAR(100) NOT NULL, description text NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, version BIGINT, INDEX updated_by_idx (updated_by), INDEX created_by_idx (created_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE object_version (id BIGINT, street text NOT NULL, postcode text NOT NULL, city text NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, version BIGINT, PRIMARY KEY(id, version)) ENGINE = INNODB;
CREATE TABLE object (id BIGINT AUTO_INCREMENT, street text NOT NULL, postcode text NOT NULL, city text NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, version BIGINT, INDEX updated_by_idx (updated_by), INDEX created_by_idx (created_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE objectunit_version (id BIGINT, object_id BIGINT NOT NULL, rooms BIGINT, rentdeposit FLOAT(6, 2), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, version BIGINT, PRIMARY KEY(id, version)) ENGINE = INNODB;
CREATE TABLE objectunit (id BIGINT AUTO_INCREMENT, object_id BIGINT NOT NULL, rooms BIGINT, rentdeposit FLOAT(6, 2), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, version BIGINT, INDEX object_id_idx (object_id), INDEX updated_by_idx (updated_by), INDEX created_by_idx (created_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE owner_version (id BIGINT, firstname text NOT NULL, surname text NOT NULL, street text NOT NULL, postcode text NOT NULL, city text NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, version BIGINT, PRIMARY KEY(id, version)) ENGINE = INNODB;
CREATE TABLE owner (id BIGINT AUTO_INCREMENT, firstname text NOT NULL, surname text NOT NULL, street text NOT NULL, postcode text NOT NULL, city text NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, version BIGINT, INDEX updated_by_idx (updated_by), INDEX created_by_idx (created_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE owner_object_version (id BIGINT, owner_id BIGINT NOT NULL, object_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, version BIGINT, PRIMARY KEY(id, version)) ENGINE = INNODB;
CREATE TABLE owner_object (id BIGINT AUTO_INCREMENT, owner_id BIGINT NOT NULL, object_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, version BIGINT, INDEX object_id_idx (object_id), INDEX owner_id_idx (owner_id), INDEX updated_by_idx (updated_by), INDEX created_by_idx (created_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE unit_infrastructure_version (id BIGINT, objectunit_id BIGINT NOT NULL, infrastructure_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, version BIGINT, PRIMARY KEY(id, version)) ENGINE = INNODB;
CREATE TABLE unit_infrastructure (id BIGINT AUTO_INCREMENT, objectunit_id BIGINT NOT NULL, infrastructure_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, version BIGINT, INDEX infrastructure_id_idx (infrastructure_id), INDEX objectunit_id_idx (objectunit_id), INDEX updated_by_idx (updated_by), INDEX created_by_idx (created_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE infrastructure_version ADD CONSTRAINT infrastructure_version_id_infrastructure_id FOREIGN KEY (id) REFERENCES infrastructure(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE infrastructure ADD CONSTRAINT infrastructure_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE infrastructure ADD CONSTRAINT infrastructure_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE object_version ADD CONSTRAINT object_version_id_object_id FOREIGN KEY (id) REFERENCES object(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE object ADD CONSTRAINT object_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE object ADD CONSTRAINT object_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE objectunit_version ADD CONSTRAINT objectunit_version_id_objectunit_id FOREIGN KEY (id) REFERENCES objectunit(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE objectunit ADD CONSTRAINT objectunit_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE objectunit ADD CONSTRAINT objectunit_object_id_object_id FOREIGN KEY (object_id) REFERENCES object(id);
ALTER TABLE objectunit ADD CONSTRAINT objectunit_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE owner_version ADD CONSTRAINT owner_version_id_owner_id FOREIGN KEY (id) REFERENCES owner(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE owner ADD CONSTRAINT owner_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE owner ADD CONSTRAINT owner_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE owner_object_version ADD CONSTRAINT owner_object_version_id_owner_object_id FOREIGN KEY (id) REFERENCES owner_object(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE owner_object ADD CONSTRAINT owner_object_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE owner_object ADD CONSTRAINT owner_object_owner_id_owner_id FOREIGN KEY (owner_id) REFERENCES owner(id);
ALTER TABLE owner_object ADD CONSTRAINT owner_object_object_id_object_id FOREIGN KEY (object_id) REFERENCES object(id);
ALTER TABLE owner_object ADD CONSTRAINT owner_object_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE unit_infrastructure_version ADD CONSTRAINT unit_infrastructure_version_id_unit_infrastructure_id FOREIGN KEY (id) REFERENCES unit_infrastructure(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE unit_infrastructure ADD CONSTRAINT unit_infrastructure_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE unit_infrastructure ADD CONSTRAINT unit_infrastructure_objectunit_id_objectunit_id FOREIGN KEY (objectunit_id) REFERENCES objectunit(id);
ALTER TABLE unit_infrastructure ADD CONSTRAINT unit_infrastructure_infrastructure_id_infrastructure_id FOREIGN KEY (infrastructure_id) REFERENCES infrastructure(id);
ALTER TABLE unit_infrastructure ADD CONSTRAINT unit_infrastructure_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
